{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Navbar","lazy","Home","Area","Bar","Column","DrillDown","FixedColumn","HighChart","PieChart","PieChartDrilldown","Scatterplot","App","className","fallback","Spinner","animation","variant","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sPAKMA,EAASC,gBAAK,kBAAM,gCACpBC,EAAOD,gBAAK,kBAAM,sDAClBE,EAAOF,gBAAK,kBAAM,sDAClBG,EAAMH,gBAAK,kBAAM,uDACjBI,EAASJ,gBAAK,kBAAM,uDACpBK,EAAYL,gBAAK,kBAAM,sDACvBM,EAAcN,gBAAK,kBAAM,uDACzBO,EAAYP,gBAAK,kBAAM,uDACvBQ,EAAWR,gBAAK,kBAAM,uDACtBS,EAAoBT,gBAAK,kBAAM,sDAC/BU,EAAcV,gBAAK,kBAAM,uDA+ChBW,MA7Cf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,WAAD,CAAUC,SAAU,cAACC,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,WAAtD,UACE,cAACjB,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,IAAlB,SACE,cAACjB,EAAD,MAEF,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,QAAlB,SACE,cAAChB,EAAD,MAEF,cAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,OAAlB,SACE,cAACf,EAAD,MAEF,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,UAAlB,SACE,cAACd,EAAD,MAEF,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,aAAlB,SACE,cAACb,EAAD,MAEF,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,eAAlB,SACE,cAACZ,EAAD,MAEF,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,aAAlB,SACE,cAACX,EAAD,MAEF,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,YAAlB,SACE,cAACV,EAAD,MAEF,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,qBAAlB,SACE,cAACT,EAAD,MAEF,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,eAAlB,SACE,cAACR,EAAD,MAEF,cAAC,IAAD,CAAOO,OAAK,EAAZ,SACE,gEC1CGE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fc541ea5.chunk.js","sourcesContent":["import React, { lazy, Suspense } from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { Spinner } from 'react-bootstrap';\n\nconst Navbar = lazy(() => import('./assets/Navbar'));\nconst Home = lazy(() => import('./Home'));\nconst Area = lazy(() => import('./components/Area'));\nconst Bar = lazy(() => import('./components/Bar'));\nconst Column = lazy(() => import('./components/Column'));\nconst DrillDown = lazy(() => import('./components/DrillDown'));\nconst FixedColumn = lazy(() => import('./components/FixedColumn'));\nconst HighChart = lazy(() => import('./components/HighChart'));\nconst PieChart = lazy(() => import('./components/PieChart'));\nconst PieChartDrilldown = lazy(() => import('./components/PieChartDrilldown'));\nconst Scatterplot = lazy(() => import('./components/Scatterplot'));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Suspense fallback={<Spinner animation=\"grow\" variant=\"danger\" />}>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/area\">\n            <Area />\n          </Route>\n          <Route exact path=\"/bar\">\n            <Bar />\n          </Route>\n          <Route exact path=\"/column\">\n            <Column />\n          </Route>\n          <Route exact path=\"/drilldown\">\n            <DrillDown />\n          </Route>\n          <Route exact path=\"/fixedcolumn\">\n            <FixedColumn />\n          </Route>\n          <Route exact path=\"/highchart\">\n            <HighChart />\n          </Route>\n          <Route exact path=\"/pieChart\">\n            <PieChart />\n          </Route>\n          <Route exact path=\"/piechartDrilldown\">\n            <PieChartDrilldown />\n          </Route>\n          <Route exact path=\"/scatterPlot\">\n            <Scatterplot />\n          </Route>\n          <Route exact>\n            <h2>This is an 404 Page</h2>\n          </Route>\n        </Switch>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}